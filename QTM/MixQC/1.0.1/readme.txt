1. Citation guidelines

If you report or publish results that you obtained using QSATS, please
cite the 2011 Computer Physics Communications article that describes
the code.

2. For more information

There is a Google Group for QSATS users; for more information about
the group, please visit <http://groups.google.com/group/qsats-users>.

3. Files distributed with QSATS

3a. Text files

File: manifest.txt

This file lists the size and MD5 checksum of the files that are
distributed with QSATS.

File: readme.txt

You are reading readme.txt.

3b. Fortran source code files (alphabetized by name)

File: child.f

This is the Fortran source code for the child process.

Subroutines contained in this file: child

File: cmrg.f

This Fortran source code file contains subroutines associated with the
pseudo random number generator used by QSATS.

Subroutines contained in this file: gstep, mulmod, rcheck, rskip, rstep

File: eloc.f

This Fortran source code file contains the code for the auxiliary
program ELOC; it computes both the total energy and the expectation
value of the potential energy from the snapshots recorded by QSATS.

Subroutines contained in this file: local, quit

File: even.f

This Fortran source code file contains the code that distributes the
even-numbered replicas among the child processes for updating.

Subroutines contained in this file: evnrep

File: input.f

This Fortran source code file contains the code that reads, from the
standard input stream, the names of the snapshot, save, and lattice
files and the user-specifed parameters.

Subroutines contained in this file: input

File: main.f

This is a relatively short Fortran program that detects whether the
current node is the parent node or a child node, and initiates the
correct process.  If this is the parent node, this program also prints
out the compile-time parameters that are specified in sizes.h.

Subroutines contained in this file: errchk, quit

File: odd.f

This Fortran source code file contains the code that distributes the
odd-numbered replicas among the child processes for updating.

Subroutines contained in this file: oddrep

File: parent.f

This is the Fortran source code for the parent process.

Subroutines contained in this file: parent

File: rpsend.f

This Fortran source code file contains the code that sends a VPI
replica to a child process for updating.

Subroutines contained in this file: rpsend

File: rsetup.f

This Fortran source code file contains the code that initiailizes the
pseudo random number generators for the VPI chain replicas.

Subroutines contained in this file: rsetup

File: tstamp.master

This file enables QSATS to print in the output file the date and time
of the compilation of QSATS.  The compliation script compile.csh uses
a sed command to create the Fortran source code file tstamp.f from
tstamp.master; this embeds the compilation date and time in tstamp.f.

Subroutines contained in this file: tstamp

File: vinit.f

This Fortran source code file contains the code that sets up the
lookup table for the potential energy function.  The user should make
sure that the variables r2min and bin are appropriate for her or his
problem.  The variable r2min specifies the minimum value of r**2 in
the lookup table; the variable bin specifies the spacing between
consecutive r**2 values in the lookup table.  The user should also be
sure to set the parameter NVBINS in sizes.h accordingly.

Subroutines contained in this file: hfdhbe, vinit

3c. Fortran "header" files

File: qsats.h

This file contains the common blocks used by QSATS.

File: sizes.h

This file contains various array dimensions.  Change NREPS to change
the number of replicas or beads in the VPI polymer.  Change NATOMS to
change the number of atoms in the simulation box.  Change NVBINS to
change the size of the potential energy lookup table.  Change RATIO
and NIP to change the number of interacting pairs in which each atom
participates.

3d. Scripts

File: compile.csh

This csh script compiles both main.f and eloc.f.

3e. Test run job scripts

File: eloc.job

This job script executes the ELOC program to compute the total energy
and the expectation value of the potential energy for the crystal.  It
uses the snapshot file generated by the continuation run produced when
the main.job job script (see below) is executed.

File: main.job

This job script executes a 100,000-cycle fresh run using parameter set
A, and follows this with a 1,000,000-cycle continuation run that uses
as its starting configuration the ending configuration of the fresh run.

3f. Test run input files

File: lattice-file-180

This file contains a 180-atom chunk of a hexagonal close packed (hcp)
crystal lattice.  The atomic density of the chunk is 4 atoms per cubic
bohr.  The c axis of the hcp crystal is aligned with the space-fixed z
axis.

File: lattice-file-448

This file contains a 448-atom chunk of a hexagonal close packed (hcp)
crystal lattice.  The atomic density of the chunk is 4 atoms per cubic
bohr.  The c axis of the hcp crystal is aligned with the space-fixed z
axis.

Although the test run whose output is distributed with QSATS employs a
180-atom hcp lattice, this larger lattice file is included for users
who may want to run larger simulations.

3g. Test run output files

File: eloc.out

This is the output generated by the ELOC code.  It shows the estimates
and standard deviations computed both for the crystal's total energy
and for the expectation value of the crystal's potential energy.

File: continuation.out

This is the QSATS output for the continuation run.

File: fresh.out

This is the QSATS output for the fresh run.
